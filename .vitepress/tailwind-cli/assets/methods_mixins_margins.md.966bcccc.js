import{_ as t,o as e,c as a,V as d}from"./chunks/framework.395991b1.js";const g=JSON.parse('{"title":"Margins Methods","description":"","frontmatter":{},"headers":[],"relativePath":"methods/mixins/margins.md","filePath":"methods/mixins/margins.md"}'),r={name:"methods/mixins/margins.md"},o=d('<h1 id="margins-methods" tabindex="-1">Margins Methods <a class="header-anchor" href="#margins-methods" aria-label="Permalink to &quot;Margins Methods&quot;">â€‹</a></h1><p>These are the methods available for margins by default. They all excepts <code>double</code> value as a parameter to apply margins.</p><table><thead><tr><th>Method</th><th>Description</th></tr></thead><tbody><tr><td>.m(double val)</td><td>Creates all side margin</td></tr><tr><td>.mx(double val)</td><td>Creates left and rght side margin</td></tr><tr><td>.my(double val)</td><td>Creates top and bottom margin</td></tr><tr><td>.ml(double val)</td><td>Creates only left side margin</td></tr><tr><td>.mt(double val)</td><td>Creates top side margin</td></tr><tr><td>.mr(double val)</td><td>Creates right side margin</td></tr><tr><td>.mb(double val)</td><td>Creates botton margin</td></tr></tbody></table><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>If you have added more spacers inside your <code>tailwind.config.json</code> file, they will also be available for you to use on any Widget that uses <code>TwMarginMixin</code>.</p></div>',4),s=[o];function i(l,n,m,c,h,_){return e(),a("div",null,s)}const u=t(r,[["render",i]]);export{g as __pageData,u as default};
